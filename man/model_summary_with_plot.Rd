% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_summary_with_plot.R
\name{model_summary_with_plot}
\alias{model_summary_with_plot}
\title{Model summary with interaction plot}
\usage{
model_summary_with_plot(
  data,
  response_variable,
  level_1_factors,
  level_2_factors = NULL,
  two_way_interaction_factor = NULL,
  three_way_interaction_factor = NULL,
  cateogrical_var = NULL,
  id,
  graph_label_name = NULL,
  estimation_method = "REML",
  opt_control = "optim",
  na.action = na.exclude,
  model_performance = c("R2_fixed_effect", "R2_full_model"),
  return_result = "none",
  print_result = "both"
)
}
\arguments{
\item{data}{dataframe}

\item{response_variable}{character or vector of length 1}

\item{level_1_factors}{vector. Lower level variables (e.g., individual-level)}

\item{level_2_factors}{vector. Higher level variables (e.g., country-level)}

\item{two_way_interaction_factor}{vector of length more than 2. Default to `null`. vector in the form of c(predict_var1, predict_var2)}

\item{three_way_interaction_factor}{vector of length 3.  Default to `null`. vector in the form of c(predict_var1, predict_var2,predict_var3)}

\item{cateogrical_var}{vector.}

\item{id}{character or vector of length 1. The nesting variable (e.g. country)}

\item{graph_label_name}{vector or function. vector of length 2 for two-way interaction graph. vector of length 3 for three-way interaction graph. Vector should be passed in the form of c(response_var, predict_var1, predict_var2, [predict_var3]). Function should be passed as a switch function. See below for an example.}

\item{estimation_method}{character. default to `REML`. See `nlme::lme` for other options}

\item{opt_control}{character. default to `optim`. Be aware that `nlme::lme` default to nlminb. See `nlme::lme` for other option}

\item{na.action}{default to `na.exclude`. See `nlme::lme` for other options}

\item{model_performance}{vector. default to c('R2_fixed_effect'). `R2_full_model` for conditional R^2. `R2_fixed_effect` for marginal R^2. `icc` for intraclass correlation coefficient. Used the `performance::r2()` and `performance::icc()` for model performance}

\item{return_result}{character. default to `none`. Choose from `short_summary`,`long_summary`, `model`,`plot`,`none`. `none` return nothing. `short_summary` return a short model summary. `long_summary` return the summary using the `base::summary` function. `model` return a lme object. `plot` return the interaction plot.}

\item{print_result}{character. default to `both`. Choose from `both`, `long_summary`, `short_summary`, `plot`, `none`. `both` return a short_summary and plot. `short_summary` return a short model summary. `long_summary` return the summary using the base::summary. `plot` return the interaction plot.}
}
\value{

}
\description{
A integrated function that combines all of the functionality of the pacakge.
}
\examples{
model_summary(data = processed_df,
             response_variable = 'JS_SCALE',
             level_1_factors = c('JI_Individual','Gender_Individual', 'SES_Individual'),
             level_2_factors = c('UE_Country'),
             two_way_interaction_factor = c('JI_Individual', 'SES_Individual'),
             id = 'Country',
             graph_label_name = graph_label_name)

# graph_label_function should be able to return the name of the label if the variable name is passed in
# example of graoh_label_name function, you must load the function in the script
graph_label_name <- function(var_name) {
                      var_name_processed =
                         switch (var_name,
                             'Variable_Name1' = 'Label_Name1',
                             'Variable_Name2' = 'Label_Name2',
                             'Variable_Name3' = 'Label_Name3')
                         if (is.null(var_name_processed)) {
                             var_name_processed = var_name }
                         return(var_name_processed)
                       }


}
